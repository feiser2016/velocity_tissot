--- drivers/usb/serial/quatech2.c
+++ drivers/usb/serial/quatech2.c
@@ -141,7 +141,6 @@ static void qt2_release(struct usb_serial *serial)
 
 	serial_priv = usb_get_serial_data(serial);
 
-	usb_kill_urb(serial_priv->read_urb);
 	usb_free_urb(serial_priv->read_urb);
 	kfree(serial_priv->read_buffer);
 	kfree(serial_priv);
@@ -188,22 +187,22 @@ static inline int qt2_setdevice(struct usb_device *dev, u8 *data)
 }
 
 
+static inline int qt2_getdevice(struct usb_device *dev, u8 *data)
+{
+	return usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
+			       QT_SET_GET_DEVICE, 0xc0, 0, 0,
+			       data, 3, QT2_USB_TIMEOUT);
+}
+
 static inline int qt2_getregister(struct usb_device *dev,
 				  u8 uart,
 				  u8 reg,
 				  u8 *data)
 {
-	int ret;
-
-	ret = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
-			      QT_SET_GET_REGISTER, 0xc0, reg,
-			      uart, data, sizeof(*data), QT2_USB_TIMEOUT);
-	if (ret < sizeof(*data)) {
-		if (ret >= 0)
-			ret = -EIO;
-	}
+	return usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
+			       QT_SET_GET_REGISTER, 0xc0, reg,
+			       uart, data, sizeof(*data), QT2_USB_TIMEOUT);
 
-	return ret;
 }
 
 static inline int qt2_setregister(struct usb_device *dev,
@@ -372,11 +371,9 @@ static int qt2_open(struct tty_struct *tty, struct usb_serial_port *port)
 				 0xc0, 0,
 				 device_port, data, 2, QT2_USB_TIMEOUT);
 
-	if (status < 2) {
+	if (status < 0) {
 		dev_err(&port->dev, "%s - open port failed %i\n", __func__,
 			status);
-		if (status >= 0)
-			status = -EIO;
 		kfree(data);
 		return status;
 	}
